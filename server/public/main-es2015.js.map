{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/error-dialog/error-dialog.component.ts","./src/app/error-dialog/error-dialog.component.html","./src/app/error-dialog/error-dialog.service.ts","./src/app/error-dialog/error-handling.interceptor.ts","./src/app/sidenav/sidenav.component.ts","./src/app/sidenav/sidenav.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {path: '', redirectTo: 'employees', pathMatch: 'full'},\n  {\n    path: 'employees',\n    loadChildren: () => import('./employees/employees.module').then(m => m.EmployeesModule)\n  }\n  // {path: 'newEmployee', component: FavoritesComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'ngApp';\n}\n","<link href=\"https://fonts.googleapis.com/icon?family=Material+Icons&display=block\" rel=\"stylesheet\">\n<style>\n  body {\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\n    font-size: 14px;\n    color: #333;\n    box-sizing: border-box;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    margin: 0;\n  }\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    margin: 8px 0;\n  }\n\n  p {\n    margin: 0;\n  }\n</style>\n<div class=\"main\">\n  <mat-toolbar color=\"primary\">\n    <mat-icon class=\"account-icon\">account_circle</mat-icon>\n    <span>Employees App</span>\n  </mat-toolbar>\n  <mat-sidenav-container class=\"example-container\">\n    <mat-sidenav color=\"primary\" mode=\"side\" fixedInViewport=\"true\" fixedTopGap=\"65\" opened>\n      <app-sidenav></app-sidenav>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"content\">\n      <router-outlet></router-outlet>\n    </mat-sidenav-content>\n  </mat-sidenav-container>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { ErrorHandlingInterceptor } from './error-dialog/error-handling.interceptor';\nimport { ErrorDialogComponent } from './error-dialog/error-dialog.component';\nimport { SidenavComponent } from './sidenav/sidenav.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SidenavComponent,\n    ErrorDialogComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    AppRoutingModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatListModule,\n    MatIconModule,\n    MatButtonModule,\n    MatDialogModule\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorHandlingInterceptor, multi: true }\n  ],\n  entryComponents: [ErrorDialogComponent],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA} from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-error-dialog',\n  templateUrl: './error-dialog.component.html',\n  styleUrls: ['./error-dialog.component.scss']\n})\nexport class ErrorDialogComponent implements OnInit {\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: string) {}\n\n  ngOnInit(): void {\n  }\n}\n","<h1 mat-dialog-title>Error</h1>\n<div mat-dialog-content>\n  <p>\n    Reason: {{data['reason']}}\n  </p>\n  <p>\n    Status: {{data['status']}}\n  </p>\n</div>\n<div mat-dialog-actions>\n  <button mat-button [mat-dialog-close]>Ok</button>\n</div>\n","import { Injectable } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ErrorDialogComponent } from './error-dialog.component';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class ErrorDialogService {\r\n  isDialogOpen = false;\r\n  \r\n  constructor(public dialog: MatDialog) { }\r\n\r\n  openDialog(data): any {\r\n    if (this.isDialogOpen) {\r\n      return false;\r\n    }\r\n    this.isDialogOpen = true;\r\n    const dialogRef = this.dialog.open(ErrorDialogComponent, {\r\n      width: '300px',\r\n      data\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.isDialogOpen = false;\r\n    });\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {ErrorDialogService} from './error-dialog.service';\r\nimport {\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpErrorResponse\r\n} from '@angular/common/http';\r\n\r\nimport {Observable, throwError} from 'rxjs';\r\nimport {catchError} from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ErrorHandlingInterceptor implements HttpInterceptor {\r\n  constructor(public errorDialogService: ErrorDialogService) {\r\n  }\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n    return next.handle(request).pipe(\r\n      catchError((error: HttpErrorResponse) => {\r\n        let data = {};\r\n        data = {\r\n          reason: error && error.error && error.error.msg ? error.error.msg : '',\r\n          status: error.status\r\n        };\r\n        this.errorDialogService.openDialog(data);\r\n        return throwError(error);\r\n      }));\r\n  }\r\n}\r\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'app-sidenav',\n  templateUrl: './sidenav.component.html',\n  styleUrls: ['./sidenav.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SidenavComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-nav-list class=\"sidenav\">\n    <a mat-list-item routerLink=\"/employees\">\n        <mat-icon>list</mat-icon> Employees List\n    </a>\n    <a mat-list-item routerLink=\"/employees/new\">\n        <mat-icon>supervisor_account</mat-icon> New Employe\n    </a>\n</mat-nav-list>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}