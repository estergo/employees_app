{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/error-dialog/error-dialog.component.ts","webpack:///src/app/error-dialog/error-dialog.component.html","webpack:///src/app/error-dialog/error-dialog.service.ts","webpack:///src/app/error-dialog/error-handling.interceptor.ts","webpack:///src/app/sidenav/sidenav.component.ts","webpack:///src/app/sidenav/sidenav.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","loadChildren","m","EmployeesModule","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","declarations","providers","entryComponents","bootstrap","ErrorDialogComponent","data","ErrorDialogService","dialog","isDialogOpen","dialogRef","open","width","afterClosed","subscribe","result","providedIn","ErrorHandlingInterceptor","errorDialogService","request","next","handle","pipe","error","reason","msg","status","openDialog","SidenavComponent","changeDetection","OnPush","environment","production","bootstrapModule","err","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {path: '', redirectTo: 'employees', pathMatch: 'full'},\n  {\n    path: 'employees',\n    loadChildren: () => import('./employees/employees.module').then(m => m.EmployeesModule)\n  }\n  // {path: 'newEmployee', component: FavoritesComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'ngApp';\n}\n","<link href=\"https://fonts.googleapis.com/icon?family=Material+Icons&display=block\" rel=\"stylesheet\">\n<style>\n  body {\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\n    font-size: 14px;\n    color: #333;\n    box-sizing: border-box;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    margin: 0;\n  }\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    margin: 8px 0;\n  }\n\n  p {\n    margin: 0;\n  }\n</style>\n<div class=\"main\">\n  <mat-toolbar color=\"primary\">\n    <mat-icon class=\"account-icon\">account_circle</mat-icon>\n    <span>Employees App</span>\n  </mat-toolbar>\n  <mat-sidenav-container class=\"example-container\">\n    <mat-sidenav color=\"primary\" mode=\"side\" fixedInViewport=\"true\" fixedTopGap=\"65\" opened>\n      <app-sidenav></app-sidenav>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"content\">\n      <router-outlet></router-outlet>\n    </mat-sidenav-content>\n  </mat-sidenav-container>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { ErrorHandlingInterceptor } from './error-dialog/error-handling.interceptor';\nimport { ErrorDialogComponent } from './error-dialog/error-dialog.component';\nimport { SidenavComponent } from './sidenav/sidenav.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SidenavComponent,\n    ErrorDialogComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    AppRoutingModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatListModule,\n    MatIconModule,\n    MatButtonModule,\n    MatDialogModule\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorHandlingInterceptor, multi: true }\n  ],\n  entryComponents: [ErrorDialogComponent],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA} from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-error-dialog',\n  templateUrl: './error-dialog.component.html',\n  styleUrls: ['./error-dialog.component.scss']\n})\nexport class ErrorDialogComponent implements OnInit {\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: string) {}\n\n  ngOnInit(): void {\n  }\n}\n","<h1 mat-dialog-title>Error</h1>\n<div mat-dialog-content>\n  <p>\n    Reason: {{data['reason']}}\n  </p>\n  <p>\n    Status: {{data['status']}}\n  </p>\n</div>\n<div mat-dialog-actions>\n  <button mat-button [mat-dialog-close]>Ok</button>\n</div>\n","import { Injectable } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ErrorDialogComponent } from './error-dialog.component';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class ErrorDialogService {\r\n  isDialogOpen = false;\r\n  \r\n  constructor(public dialog: MatDialog) { }\r\n\r\n  openDialog(data): any {\r\n    if (this.isDialogOpen) {\r\n      return false;\r\n    }\r\n    this.isDialogOpen = true;\r\n    const dialogRef = this.dialog.open(ErrorDialogComponent, {\r\n      width: '300px',\r\n      data\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.isDialogOpen = false;\r\n    });\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {ErrorDialogService} from './error-dialog.service';\r\nimport {\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpErrorResponse\r\n} from '@angular/common/http';\r\n\r\nimport {Observable, throwError} from 'rxjs';\r\nimport {catchError} from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ErrorHandlingInterceptor implements HttpInterceptor {\r\n  constructor(public errorDialogService: ErrorDialogService) {\r\n  }\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n    return next.handle(request).pipe(\r\n      catchError((error: HttpErrorResponse) => {\r\n        let data = {};\r\n        data = {\r\n          reason: error && error.error && error.error.msg ? error.error.msg : '',\r\n          status: error.status\r\n        };\r\n        this.errorDialogService.openDialog(data);\r\n        return throwError(error);\r\n      }));\r\n  }\r\n}\r\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'app-sidenav',\n  templateUrl: './sidenav.component.html',\n  styleUrls: ['./sidenav.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SidenavComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-nav-list class=\"sidenav\">\n    <a mat-list-item routerLink=\"/employees\">\n        <mat-icon>list</mat-icon> Employees List\n    </a>\n    <a mat-list-item routerLink=\"/employees/new\">\n        <mat-icon>supervisor_account</mat-icon> New Employe\n    </a>\n</mat-nav-list>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}